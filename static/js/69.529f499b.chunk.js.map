{"version":3,"file":"static/js/69.529f499b.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/BtnGoBack/BtnGoBack.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","helper/api.js"],"sourcesContent":["import { PacmanErrorSpan } from \"components/Loader/Loader.styled\";\nimport { PacmanLoader } from \"react-spinners\";\n\nconst Error = () => {\n    return (\n        <>\n        <p>...Posts load failed\n            <PacmanErrorSpan>\n                <PacmanLoader color=\"#eb1052\" size={10}/>\n            </PacmanErrorSpan>\n        </p>\n        </>\n\n    );\n}\n\nexport default Error;\n\n\n\n","import { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst BtnGoBack = () => {\n    const location = useLocation();\n    const goBack = location.state?.from || '/';\n\n    return (\n        <WrapperBtn>\n            <LinkStyled to={goBack}>\n                Go back\n            </LinkStyled>\n        </WrapperBtn>\n    );\n};\nexport default BtnGoBack;\n\n\nconst WrapperBtn = styled.div`\n    margin: 20px;\n    font-size: 20px;\n    font-weight: 700;\n    text-align: center;\n`;\n\nconst LinkStyled = styled(Link)`\n    color: #fff;\n    padding: 10px 20px;\n    border-radius: 5px;\n    text-shadow: 4px 2px 5px #eb1052;\n        &:hover{\n            background-color: #eb1052;\n            text-shadow: 4px 1px 5px #742234;\n            color: #fff;\n            box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 10px 0px,\n                rgba(0, 0, 0, 0.5) 0px 2px 15px 0px;\n        }\n`;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const TitleH2 = styled.h2`\n    text-align: center;\n    margin: 20px 0px;\n`;\n\nexport const DivCard = styled.div`\n    display: flex;\n    margin-left: 15px;\n    margin-bottom: 15px;\n`;\n\nexport const Image = styled.img`\n    object-fit: cover;\n    height: auto;\n    border-radius: 5px;\n    max-width: 400px;\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 10px 0px,\n                rgba(0, 0, 0, 0.5) 0px 2px 15px 0px;\n`;\n\nexport const DivText = styled.div`\n    max-width: 600px;\n    margin-left: 20px;\n    padding: 10px;\n`;\n\nexport const CardTitle = styled.h1`\n    margin-bottom: 30px;\n`;\n\nexport const Text = styled.p`\n    font-size: 26px;\n    margin-bottom: 10px;\n`;\n\nexport const DivLink = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const CardNavLink = styled(NavLink)`\n    text-decoration: none;\n    font-size: 24px;\n    font-weight: 500;\n    padding: 10px 20px;\n    border-radius: 5px;\n    text-shadow: 4px 2px 5px #eb1052;\n    color: black;\n    margin-left: 40px;\n        :not(:last-child) {\n            margin-left: 0;\n        }\n        &:hover{\n            background-color: #eb1052;\n            text-shadow: 4px 1px 5px #742234;\n            color: #fff;\n            box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 10px 0px,\n                rgba(0, 0, 0, 0.5) 0px 2px 15px 0px;\n        }\n        &.active{\n        background-color: #eb1052;\n        color: #fff;\n        box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 10px 0px,\n            rgba(0, 0, 0, 0.5) 0px 2px 15px 0px;\n    }\n`;","import Loader from \"components/Loader/Loader\";\nimport { getMovieDetails } from \"helper/api\";\nimport { useState, useEffect } from \"react\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport BtnGoBack from \"components/BtnGoBack/BtnGoBack\";\nimport Chackman from \"../../image/58e0ccb473a4915b2e1fa0fa.png\"\nimport { TitleH2, CardNavLink, CardTitle, DivCard, DivLink, DivText, Image, Text } from \"./MovieDetails.styled\";\nimport Error from \"components/Error/Error\";\n\nconst MovieDetails = () => {\n    const {movieId} = useParams();\n\n    const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n    });\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    error: null,\n                }));\n\n                const data = await getMovieDetails(movieId);\n                setState(prevState => ({\n                    ...prevState,\n                    item: data,\n                }))\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    }\n                })\n            }\n        };\n        fetchMovieDetails();\n    }, [movieId]);\n\n    const { item, loading, error } = state;\n    const { title, overview, poster_path, genres} = state.item;\n    const voteAverage = Math.ceil(item.vote_average * 10);\n    return (\n        <>\n            <BtnGoBack/>\n\n            {loading && <Loader />}\n            \n            {error && <Error/>}\n            \n            <TitleH2>Movie Details</TitleH2>\n        <DivCard>\n            {poster_path ? (\n                <Image src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} />) : \n                (<Image src={Chackman} alt={title}/>)}\n        <DivText>\n            <CardTitle>{title}</CardTitle>\n            <Text><b>Rating:</b> {voteAverage}%</Text>\n            <Text><b>Overview:</b> {overview}</Text>\n            <Text><b>Genres:</b>\n                {genres &&\n                    genres.map(({ id, name }) => (\n                    <Text key={id}>{name}</Text>\n                ))}\n            </Text>\n        </DivText>\n        </DivCard>\n        <DivLink>\n            <CardNavLink to={`/movies/${movieId}/cast`}>\n                Cast\n            </CardNavLink>\n            <CardNavLink to={`/movies/${movieId}/reviews`}>\n                Reviews\n            </CardNavLink>\n            \n        </DivLink>\n        <Outlet/>\n        </>\n    );\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2614fd8eb411c7000221cf444d5a4c67';\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n\nexport const getTrending = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n}\n\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n\nexport const searchMovies = async (query) => {\n    const { data } = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n  return data;\n}\n\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n}\n\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\nexport const getMovieCredits = async (id) => {\n    const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n}\n\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n}\n"],"names":["color","size","goBack","useLocation","state","from","WrapperBtn","LinkStyled","to","styled","Link","TitleH2","DivCard","Image","DivText","CardTitle","Text","DivLink","CardNavLink","NavLink","movieId","useParams","useState","item","loading","error","setState","useEffect","fetchMovieDetails","prevState","getMovieDetails","data","title","overview","poster_path","genres","voteAverage","Math","ceil","vote_average","Loader","Error","src","alt","Chackman","map","id","name","axios","API_KEY","getTrending","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}
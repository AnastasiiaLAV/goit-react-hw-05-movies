{"version":3,"file":"static/js/358.04ca2717.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","helper/api.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/MoviesPage.jsx"],"sourcesContent":["import { PacmanErrorSpan } from \"components/Loader/Loader.styled\";\nimport { PacmanLoader } from \"react-spinners\";\n\nconst Error = () => {\n    return (\n        <>\n        <p>...Posts load failed\n            <PacmanErrorSpan>\n                <PacmanLoader color=\"#eb1052\" size={10}/>\n            </PacmanErrorSpan>\n        </p>\n        </>\n\n    );\n}\n\nexport default Error;\n\n\n\n","import styled from \"styled-components\";\n\nexport const GalleryMovies = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill,minmax(100px,1fr));\n    grid-gap: 50px 20px;\n    justify-items: center;\n    list-style: none;\n    max-width: calc(100vw - 90px);\n    margin: 20px auto;\n    border-radius: 5px;\n`\n\nexport const GalleryMoviesCard = styled.li`\n    display: block;     \n    width: 100%;\n    height: 150px;\n    object-fit: cover;\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 10px 0px,\n            rgba(0, 0, 0, 0.5) 0px 2px 15px 0px;\n    filter: grayscale(40%);\n    cursor: pointer;\n    text-align: center;\n`\n\nexport const GalleryMoviesImg = styled.img`\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 10px 0px,\n            rgba(0, 0, 0, 0.5) 0px 2px 15px 0px;\n    filter: grayscale(40%);\n    cursor: pointer;\n    &:hover{\n        filter: none;\n        transition: 0.3s ease-out;\n        transform: scale(1.06);\n    }\n`","import { Link, useLocation } from \"react-router-dom\";\nimport { GalleryMoviesCard, GalleryMovies, GalleryMoviesImg } from \"./MoviesList.styled\";\nimport Chackman from \"../../image/58e0ccb473a4915b2e1fa0fa.png\";\n\n\nconst MoviesList = ({items}) => {\n    const location = useLocation();\n    \n    const elements = items.map(({ id, title, poster_path}) => \n        <GalleryMoviesCard key={id}>\n            <Link state={{from: location}} to={`/movies/${id}`}>\n            {poster_path ? (\n                <GalleryMoviesImg src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} />) : \n                (<GalleryMoviesImg src={Chackman} alt=\"checkman\"/>)}\n                <p>{title}</p> \n            </Link>\n        </GalleryMoviesCard>);\n\n    return (\n        <GalleryMovies>{elements}</GalleryMovies>\n    );\n}\n\nexport default MoviesList;\n\nMoviesList.defaultProps ={\n    items: [],\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2614fd8eb411c7000221cf444d5a4c67';\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n\nexport const getTrending = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n}\n\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n\nexport const searchMovies = async (query) => {\n    const { data } = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n  return data;\n}\n\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n}\n\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\nexport const getMovieCredits = async (id) => {\n    const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n}\n\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n}\n","import styled from 'styled-components';\n\nexport const Searchbar = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background: linear-gradient(90deg, #139e32a9, #c1ff05c0, #01eeffa6 );\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 10px 0px,\n            rgba(0, 0, 0, 0.5) 0px 2px 15px 0px;\n    border-radius: 5px;\n    `\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 5px;\n    overflow: hidden;\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 10px 0px,\n            rgba(0, 0, 0, 0.5) 0px 2px 15px 0px;\n`\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    &:hover{\n        opacity: 1;\n    }\n`\nexport const SearchFormBtnLable = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n    &::placeholder {\n        font: inherit;\n        font-size: 18px;\n    }\n`\n","import {useState} from \"react\";\nimport { BsSearch } from 'react-icons/bs'\nimport PropTypes from 'prop-types';\n\nimport {Searchbar, SearchForm, SearchFormBtn,SearchFormBtnLable,SearchFormInput} from './Searchbar.styled.js'\n\nexport default function Serchbar({onSubmitForm}) {\n    const [state, setState] = useState({query:''});\n\n    const handleNameChange = ({currentTarget}) => {\n        const {name, value} = currentTarget;\n        setState({\n            ...state,\n            [name]: value,\n            });\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmitForm({...state});\n        setState({query:''});\n    }\n    \n    return (\n    <Searchbar>\n        <SearchForm  onSubmit={handleSubmit}>\n            <SearchFormBtn type=\"submit\" >\n                <BsSearch/>\n            <SearchFormBtnLable>Search</SearchFormBtnLable>\n            </SearchFormBtn>\n\n            <SearchFormInput\n            name=\"query\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={state.query}\n            onChange={handleNameChange}\n            required\n            />\n        </SearchForm>\n    </Searchbar>\n    )\n}\n\nSerchbar.propTypes = {\n    onSubmitForm: PropTypes.func.isRequired,\n    };\n","import Error from \"components/Error/Error\";\nimport Loader from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport { searchMovies } from \"helper/api\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Serchbar from \"../../components/Searchbar/Searchbar\";\n\nconst MoviesPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n        });\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const query = searchParams.get('query');\n    \n    const onSearch = ({query}) => {\n        setSearchParams({query});\n    }\n\n    useEffect(() => {\n        const fetchSearchMovies = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    error: null,\n                }));\n\n                const data = await searchMovies(query);\n\n                setState(prevState => ({\n                    ...prevState,\n                    items: [...data.results],\n                    \n                }))\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    }\n                })\n            }\n        };\n\n        if(query){\n            fetchSearchMovies();\n        }\n        \n    }, [query]);\n    \n        const { items, loading, error } = state;\n    \n        return (\n        <>\n            <Serchbar onSubmitForm={onSearch}/>\n            {loading && <Loader />}\n            {items.length > 0 && <MoviesList items={items}/>}\n            {error && <Error/>}\n        </>\n        )\n}\n\nexport default MoviesPage;"],"names":["color","size","GalleryMovies","styled","GalleryMoviesCard","GalleryMoviesImg","MoviesList","items","location","useLocation","elements","map","id","title","poster_path","state","from","to","src","alt","Chackman","defaultProps","axios","API_KEY","getTrending","data","searchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews","Searchbar","SearchForm","SearchFormBtn","SearchFormBtnLable","SearchFormInput","Serchbar","onSubmitForm","useState","setState","onSubmit","event","preventDefault","type","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","required","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovies","prevState","results","Loader","length","Error"],"sourceRoot":""}